{"version":3,"sources":["component/TodoApp/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","input","items","handleChange","event","setState","target","value","storeItems","preventDefault","deleteItem","key","filter","index","this","className","onSubmit","type","onChange","placeholder","map","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"uNAGqBA,E,4MAEjBC,MAAQ,CACJC,MAAO,GACPC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVJ,MAAOG,EAAME,OAAOC,S,EAI5BC,WAAa,SAACJ,GACVA,EAAMK,iBACN,IAAOR,EAAS,EAAKD,MAAdC,MAEP,EAAKI,SAAS,CACVH,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAuBD,IAC5BA,MAAO,M,EAIfS,WAAa,SAACC,GAIV,EAAKN,SAAS,CAEVH,MAAO,EAAKF,MAAME,MAAMU,QAAO,SAACL,EAAMM,GAAP,OAAiBA,IAAUF,Q,4CAIlE,WAAU,IAAD,OAEL,EAAsBG,KAAKd,MAApBC,EAAP,EAAOA,MAAMC,EAAb,EAAaA,MAIb,OACI,sBAAKa,UAAY,iBAAjB,UAEI,uBAAMA,UAAY,gBAAgBC,SAAYF,KAAKN,WAAnD,UACI,0CACA,uBACIS,KAAK,OACLV,MAASN,EACTiB,SAAYJ,KAAKX,aACjBgB,YAAY,uBAKpB,6BACKjB,EAAMkB,KAAI,SAACb,EAAMM,GACd,OACI,+BACKN,EADL,IACY,mBAAGQ,UAAU,mBAAmBM,QAAW,kBAAM,EAAKX,WAAWG,QADlEA,e,GAxDLS,aCCnB,oBAAM,cAAC,EAAD,KCQNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f98a7cf5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./Todo.css\"\n\nexport default class Todo extends Component {\n\n    state = {\n        input: \"\",\n        items: []\n    };\n\n    handleChange = (event)=>{\n        this.setState({\n            input: event.target.value\n        })\n    };\n\n    storeItems = (event) =>{\n        event.preventDefault();\n        const {input} = this.state;\n\n        this.setState({\n            items: [...this.state.items,input],\n            input: \"\"\n        })\n    };\n\n    deleteItem = (key) =>{\n        // const allItems = this.state.items;\n        // allItems.splice(key,1);\n\n        this.setState({\n            // items: allItems\n            items: this.state.items.filter((value,index) => index !== key)\n        })\n    };\n\n    render() {\n\n        const {input,items} = this.state; \n\n        // console.log(items);\n\n        return (\n            <div className = \"todo-container\">\n\n                <form className = \"input-section\" onSubmit = {this.storeItems }>\n                    <h1>Todo App</h1>\n                    <input\n                        type=\"text\" \n                        value = {input} \n                        onChange = {this.handleChange} \n                        placeholder=\"Eneter items...\" \n                    />\n                    {/* <button> Add </button> */}\n                </form>\n\n                <ul>\n                    {items.map((value,index) =>{\n                        return(\n                            <li key = {index}>\n                                {value} <i className=\"fas fa-trash-alt\" onClick = {() => this.deleteItem(index)}></i>\n                            </li>\n                        );\n                    })}\n                </ul>\n                \n            </div>\n        )\n    }\n}\n","\nimport React from 'react'\nimport Todo from './component/TodoApp/Todo'\n\nexport default () => <Todo />;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}